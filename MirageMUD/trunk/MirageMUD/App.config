<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="MirageMUD">
      <section name="ObjectStorageFactory" type="Mirage.Core.IO.Serialization.ObjectStorageConfiguration, Mirage.Core"/>
      <section name="ClientManager" type="Mirage.Core.IO.ClientManagerConfiguration, Mirage.Core" />
      <section name="MudFactory" type="Mirage.Core.Data.MudFactoryConfigSection, Mirage.Core"/>
      <section name="Initializers" type="System.Configuration.AppSettingsSection,System.configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      <section name="CommandLocations" type="System.Configuration.AppSettingsSection,System.configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      <section name="MessageNamespaces"  type="System.Configuration.AppSettingsSection,System.configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
      <section name="Roles"  type="System.Configuration.AppSettingsSection,System.configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="JsonMessageFactory" type="JsonExSerializer.XmlConfigSection, JsonExSerializer"/>
  </configSections>
  <appSettings>
    <add key="default.room" value="Areas/DefaultArea/Rooms/DefaultRoom"/>
  </appSettings>
    <log4net>
      <appender name="OutputDebugStringAppender" type="log4net.Appender.OutputDebugStringAppender" >
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
        </layout>
      </appender>
      <appender name="ColoredConsoleAppender" type="log4net.Appender.ColoredConsoleAppender">
          <mapping>
              <level value="ERROR" />
              <foreColor value="Red" />
          </mapping>
          <mapping>
              <level value="DEBUG" />
              <backColor value="Green" />
          </mapping>
          <layout type="log4net.Layout.PatternLayout">
              <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
          </layout>
      </appender>
      <appender name="FileAppender" type="log4net.Appender.FileAppender">
        <file value="MirageMUD.log" />
        <appendToFile value="false" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
        </layout>
      </appender>
      <root>
        <level value="ALL" />
        <appender-ref ref="ColoredConsoleAppender" />
        <appender-ref ref="FileAppender" />
      </root>
      <logger name="DebugLogger">
        <level value="DEBUG" />
      </logger>
    </log4net>
  <MirageMUD>
    <ObjectStorageFactory>
      <PersistenceManagers>
        <add name="player" 
             base-path="players/" 
             file-extension=".jsx" 
             type="Mirage.Core.IO.Serialization.JsonExPersistenceAdapter" 
             persisted-type="Mirage.Stock.Data.Player, Mirage.Stock"/>
        <add name="area" 
             base-path="areas/" 
             file-extension=".jsx" 
             type="Mirage.Core.IO.Serialization.JsonExPersistenceAdapter" 
             persisted-type="Mirage.Stock.Data.Area, Mirage.Stock"/>
      </PersistenceManagers>
    </ObjectStorageFactory>
    <ClientManager>
      <Listeners>
        <add port="4500" client-factory="Mirage.Stock.IO.TextClientFactory, Mirage.Stock" />
        <add host="localhost" port="4501" client-factory="Mirage.Stock.IO.GuiClientFactory, Mirage.Stock" />
      </Listeners>
    </ClientManager>
    <MudFactory>
      <Mappings>
        <add factory-type="Mirage.Core.Data.MudRepositoryBase, Mirage.Core" mapped-type="Mirage.Core.Data.MudRepositoryBase, Mirage.Core" lifecycle="singleton" />
      </Mappings>
    </MudFactory>
    <Initializers>
      <add key="area" value="Mirage.Stock.Data.AreaLoader, Mirage.Stock" />
      <!-- Enter classes to be searched for commands below in CommandLocations section -->
      <add key="commands" value="Mirage.Core.Command.CommandInitializer, Mirage.Core" />
      <add key="channels" value="Mirage.Core.Communication.ChannelsInitializer, Mirage.Core" />
    </Initializers>
    <CommandLocations>
      <add key="Player" value="Mirage.Stock.Data.Player, Mirage.Stock" />
      <add key="MiscCommands" value="Mirage.Stock.Command.MiscCommands, Mirage.Stock" />
      <add key="Movement" value="Mirage.Stock.Command.Movement, Mirage.Stock" />
      <add key="AreaBuilder" value="Mirage.Stock.Command.AreaBuilder, Mirage.Stock" />
      <add key="CoderCommands" value="Mirage.Stock.Command.CoderCommands, Mirage.Stock" />
      <add key="MudCommands" value="Mirage.Core.Command.MudCommands, Mirage.Core" />
    </CommandLocations>
    <MessageNamespaces>
      <!-- NOTE, namespaces(keys) must end in a slash -->
      <add key="msg:/system/" value="messages/system.msg" />
      <add key="msg:/common/error/" value="messages/common.error.msg" />
      <add key="msg:/communication/" value="messages/communication.msg" />
      <add key="msg:/movement/" value="messages/movement.msg" />
      <add key="msg:/negotiation/" value="messages/negotiation.msg" />
      <add key="msg:/negotiation/authentication/" value="messages/negotiation.authentication.msg" />
    </MessageNamespaces>
    <Roles>
      <add key="player" value="Role for all players" />
      <add key="admin" value="Admin role has every system right regardless of role" />
      <add key="immortal" value="All immortals should have this role" />
      <add key="coder" value="For coder commands such as debugging, clearing caches, etc" />
      <add key="builder" value="Area builders" />
    </Roles>
  </MirageMUD>
  <JsonMessageFactory>
    <TypeBindings>
      <add alias="StringMessage" type="Mirage.Core.Communication.StringMessage, Mirage.Core" />
      <add alias="ResourceMessage" type="Mirage.Core.Communication.ResourceMessage, Mirage.Core" />
    </TypeBindings>
  </JsonMessageFactory>
</configuration>